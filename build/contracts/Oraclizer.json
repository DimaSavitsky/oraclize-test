{
  "contractName": "Oraclizer",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "GBP",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "updateGBP",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "myid",
          "type": "bytes32"
        },
        {
          "name": "result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "myid",
          "type": "bytes32"
        },
        {
          "name": "result",
          "type": "string"
        },
        {
          "name": "proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x6060604052341561000f57600080fd5b736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610e16806100736000396000f300606060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806301b8b3391461006757806327dc297e146100f557806338bbfa501461015f57806343f01bd31461020c575b600080fd5b341561007257600080fd5b61007a610216565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100ba57808201518184015260208101905061009f565b50505050905090810190601f1680156100e75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561010057600080fd5b61015d60048080356000191690602001909190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506102b4565b005b341561016a57600080fd5b61020a60048080356000191690602001909190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506102cf565b005b6102146102d4565b005b60068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102ac5780601f10610281576101008083540402835291602001916102ac565b820191906000526020600020905b81548152906001019060200180831161028f57829003601f168201915b505050505081565b80600690805190602001906102ca929190610d45565b505050565b505050565b61036f6040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250606060405190810160405280603a81526020017f6a736f6e28687474703a2f2f6170692e66697865722e696f2f6c61746573743f81526020017f73796d626f6c733d5553442c474250292e72617465732e474250000000000000815250610372565b50565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806103e4575060006103e26000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610880565b145b156103f5576103f3600061088b565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561047957600080fd5b5af1151561048657600080fd5b5050506040518051905073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156105c2576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561056a57600080fd5b5af1151561057757600080fd5b50505060405180519050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561066c578082015181840152602081019050610651565b50505050905090810190601f1680156106995780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15156106b757600080fd5b5af115156106c457600080fd5b50505060405180519050905062030d403a02670de0b6b3a7640000018111156106f35760006001029150610879565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663adf59f9982600087876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b838110156107ab578082015181840152602081019050610790565b50505050905090810190601f1680156107d85780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b838110156108115780820151818401526020810190506107f6565b50505050905090810190601f16801561083e5780820380516001836020036101000a031916815260200191505b50955050505050506020604051808303818588803b151561085e57600080fd5b5af1151561086b57600080fd5b505050506040518051905091505b5092915050565b6000813b9050919050565b600061089561089c565b9050919050565b6000806108bc731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed610880565b111561095d57731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506109546040805190810160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250610d2b565b60019050610d28565b600061097c73c03a2615d5efaf5f49f60b7bb6583eaec212fdf1610880565b1115610a1d5773c03a2615d5efaf5f49f60b7bb6583eaec212fdf16000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610a146040805190810160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250610d2b565b60019050610d28565b6000610a3c73b7a07bcf2ba2f2703b24c0691b5278999c59ac7e610880565b1115610add5773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610ad46040805190810160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250610d2b565b60019050610d28565b6000610afc73146500cfd35b22e4a392fe0adc06de1a1368ed48610880565b1115610b9d5773146500cfd35b22e4a392fe0adc06de1a1368ed486000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610b946040805190810160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250610d2b565b60019050610d28565b6000610bbc736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475610880565b1115610c1f57736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4756000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050610d28565b6000610c3e7320e12a1f859b3feae5fb2a0a32c18f5a65555bbf610880565b1115610ca1577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050610d28565b6000610cc07351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa610880565b1115610d23577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050610d28565b600090505b90565b8060029080519060200190610d41929190610d45565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610d8657805160ff1916838001178555610db4565b82800160010185558215610db4579182015b82811115610db3578251825591602001919060010190610d98565b5b509050610dc19190610dc5565b5090565b610de791905b80821115610de3576000816000905550600101610dcb565b5090565b905600a165627a7a72305820e65631045f5c1beb8c0820a98e859ec499ef78b29152a944d4aa352c2dd77f9a0029",
  "deployedBytecode": "0x606060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806301b8b3391461006757806327dc297e146100f557806338bbfa501461015f57806343f01bd31461020c575b600080fd5b341561007257600080fd5b61007a610216565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100ba57808201518184015260208101905061009f565b50505050905090810190601f1680156100e75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561010057600080fd5b61015d60048080356000191690602001909190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506102b4565b005b341561016a57600080fd5b61020a60048080356000191690602001909190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506102cf565b005b6102146102d4565b005b60068054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102ac5780601f10610281576101008083540402835291602001916102ac565b820191906000526020600020905b81548152906001019060200180831161028f57829003601f168201915b505050505081565b80600690805190602001906102ca929190610d45565b505050565b505050565b61036f6040805190810160405280600381526020017f55524c0000000000000000000000000000000000000000000000000000000000815250606060405190810160405280603a81526020017f6a736f6e28687474703a2f2f6170692e66697865722e696f2f6c61746573743f81526020017f73796d626f6c733d5553442c474250292e72617465732e474250000000000000815250610372565b50565b60008060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806103e4575060006103e26000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610880565b145b156103f5576103f3600061088b565b505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561047957600080fd5b5af1151561048657600080fd5b5050506040518051905073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156105c2576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b151561056a57600080fd5b5af1151561057757600080fd5b50505060405180519050600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561066c578082015181840152602081019050610651565b50505050905090810190601f1680156106995780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15156106b757600080fd5b5af115156106c457600080fd5b50505060405180519050905062030d403a02670de0b6b3a7640000018111156106f35760006001029150610879565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663adf59f9982600087876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b838110156107ab578082015181840152602081019050610790565b50505050905090810190601f1680156107d85780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b838110156108115780820151818401526020810190506107f6565b50505050905090810190601f16801561083e5780820380516001836020036101000a031916815260200191505b50955050505050506020604051808303818588803b151561085e57600080fd5b5af1151561086b57600080fd5b505050506040518051905091505b5092915050565b6000813b9050919050565b600061089561089c565b9050919050565b6000806108bc731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed610880565b111561095d57731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506109546040805190810160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250610d2b565b60019050610d28565b600061097c73c03a2615d5efaf5f49f60b7bb6583eaec212fdf1610880565b1115610a1d5773c03a2615d5efaf5f49f60b7bb6583eaec212fdf16000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610a146040805190810160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250610d2b565b60019050610d28565b6000610a3c73b7a07bcf2ba2f2703b24c0691b5278999c59ac7e610880565b1115610add5773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610ad46040805190810160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250610d2b565b60019050610d28565b6000610afc73146500cfd35b22e4a392fe0adc06de1a1368ed48610880565b1115610b9d5773146500cfd35b22e4a392fe0adc06de1a1368ed486000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610b946040805190810160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250610d2b565b60019050610d28565b6000610bbc736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475610880565b1115610c1f57736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4756000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050610d28565b6000610c3e7320e12a1f859b3feae5fb2a0a32c18f5a65555bbf610880565b1115610ca1577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050610d28565b6000610cc07351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa610880565b1115610d23577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050610d28565b600090505b90565b8060029080519060200190610d41929190610d45565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610d8657805160ff1916838001178555610db4565b82800160010185558215610db4579182015b82811115610db3578251825591602001919060010190610d98565b5b509050610dc19190610dc5565b5090565b610de791905b80821115610de3576000816000905550600101610dcb565b5090565b905600a165627a7a72305820e65631045f5c1beb8c0820a98e859ec499ef78b29152a944d4aa352c2dd77f9a0029",
  "sourceMap": "74:456:0:-;;;179:116;;;;;;;;245:42;217:3;;:71;;;;;;;;;;;;;;;;;;74:456;;;;;;",
  "deployedSourceMap": "74:456:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;155:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;155:17:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;443:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13418:146:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;301:136:0;;;;;;155:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;443:85::-;515:6;509:3;:12;;;;;;;;;;;;:::i;:::-;;443:85;;:::o;13418:146:1:-;;;;:::o;301:136:0:-;347:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;:83::i;:::-;;301:136::o;13875:306:1:-;13960:10;13981;11049:1;11043:3;;;;;;;;;;;11035:15;;;11034:49;;;;11081:1;11054:25;11074:3;;;;;;;;;;;11054:11;:25::i;:::-;:28;11034:49;11031:101;;;11097:35;10765:1;11097:19;:35::i;:::-;;11031:101;11167:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11146:37;;11154:8;;;;;;;;;;;11146:37;;;;11143:92;;;11218:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11197:8;;:38;;;;;;;;;;;;;;;;;;11143:92;13994:8;;;;;;;;;;;:17;;;14012:10;13994:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;13994:29:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13981:42;;14067:6;14055:11;:18;14045:7;:28;14037:5;:36;14033:50;;;14082:1;14075:8;;;;;;14033:50;14127:8;;;;;;;;;;;:14;;;14148:5;14155:1;14158:10;14170:3;14127:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14127:47:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;14127:47:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14120:54;;11246:1;13875:306;;;;;:::o;33676:150::-;33738:10;33804:5;33792:18;33783:27;;33769:51;;;:::o;11359:183::-;11422:4;11442:21;:19;:21::i;:::-;11435:28;;11359:183;;;:::o;11547:1749::-;11595:4;11670:1;11614:55;11626:42;11614:11;:55::i;:::-;:57;11610:245;;;11724:42;11696:3;;:71;;;;;;;;;;;;;;;;;;11781:38;;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;11840:4;11833:11;;;;11610:245;11924:1;11868:55;11880:42;11868:11;:55::i;:::-;:57;11864:254;;;11986:42;11958:3;;:71;;;;;;;;;;;;;;;;;;12043:39;;;;;;;;;;;;;;;;;;;:23;:39::i;:::-;12103:4;12096:11;;;;11864:254;12187:1;12131:55;12143:42;12131:11;:55::i;:::-;:57;12127:249;;;12247:42;12219:3;;:71;;;;;;;;;;;;;;;;;;12304:36;;;;;;;;;;;;;;;;;;;:23;:36::i;:::-;12361:4;12354:11;;;;12127:249;12445:1;12389:55;12401:42;12389:11;:55::i;:::-;:57;12385:253;;;12507:42;12479:3;;:71;;;;;;;;;;;;;;;;;;12564:38;;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;12623:4;12616:11;;;;12385:253;12707:1;12651:55;12663:42;12651:11;:55::i;:::-;:57;12647:201;;;12769:42;12741:3;;:71;;;;;;;;;;;;;;;;;;12833:4;12826:11;;;;12647:201;12917:1;12861:55;12873:42;12861:11;:55::i;:::-;:57;12857:200;;;12978:42;12950:3;;:71;;;;;;;;;;;;;;;;;;13042:4;13035:11;;;;12857:200;13126:1;13070:55;13082:42;13070:11;:55::i;:::-;:57;13066:202;;;13189:42;13161:3;;:71;;;;;;;;;;;;;;;;;;13253:4;13246:11;;;;13066:202;13284:5;13277:12;;11547:1749;;:::o;39083:118::-;39181:13;39157:21;:37;;;;;;;;;;;;:::i;:::-;;39083:118;:::o;74:456:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.21;\n\nimport \"../ethereum-api/oraclizeAPI_0.5.sol\";\n\n\ncontract Oraclizer is usingOraclize {\n    OraclizeAddrResolverI private OAR;\n    string public GBP;\n\n    function Oraclizer() public {\n        OAR = OraclizeAddrResolverI(0x6f485C8BF6fc43eA212E93BBF8ce046C7f1cb475);\n    }\n\n    function updateGBP() public payable {\n        oraclize_query(\"URL\", \"json(http://api.fixer.io/latest?symbols=USD,GBP).rates.GBP\");\n    }\n\n    function __callback(bytes32 myid, string result) public {\n        GBP = result;\n    }\n}\n",
  "sourcePath": "/Users/dmitrisavitski/EthereumProjects/Practice/oraclize-practice/contracts/Oraclizer.sol",
  "ast": {
    "absolutePath": "/Users/dmitrisavitski/EthereumProjects/Practice/oraclize-practice/contracts/Oraclizer.sol",
    "exportedSymbols": {
      "Oraclizer": [
        40
      ]
    },
    "id": 41,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/Users/dmitrisavitski/EthereumProjects/Practice/oraclize-practice/ethereum-api/oraclizeAPI_0.5.sol",
        "file": "../ethereum-api/oraclizeAPI_0.5.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 41,
        "sourceUnit": 6034,
        "src": "26:45:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "usingOraclize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6033,
              "src": "96:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingOraclize_$6033",
                "typeString": "contract usingOraclize"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "96:13:0"
          }
        ],
        "contractDependencies": [
          6033
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 40,
        "linearizedBaseContracts": [
          40,
          6033
        ],
        "name": "Oraclizer",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6,
            "name": "OAR",
            "nodeType": "VariableDeclaration",
            "scope": 40,
            "src": "116:33:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$158",
              "typeString": "contract OraclizeAddrResolverI"
            },
            "typeName": {
              "contractScope": null,
              "id": 5,
              "name": "OraclizeAddrResolverI",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 158,
              "src": "116:21:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$158",
                "typeString": "contract OraclizeAddrResolverI"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 8,
            "name": "GBP",
            "nodeType": "VariableDeclaration",
            "scope": 40,
            "src": "155:17:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string storage ref"
            },
            "typeName": {
              "id": 7,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "155:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string storage pointer"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 17,
              "nodeType": "Block",
              "src": "207:88:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 15,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 11,
                      "name": "OAR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "217:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$158",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "307836663438354338424636666334336541323132453933424246386365303436433766316362343735",
                          "id": 13,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "245:42:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x6f485C8BF6fc43eA212E93BBF8ce046C7f1cb475"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 12,
                        "name": "OraclizeAddrResolverI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 158,
                        "src": "223:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OraclizeAddrResolverI_$158_$",
                          "typeString": "type(contract OraclizeAddrResolverI)"
                        }
                      },
                      "id": 14,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "223:65:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$158",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "src": "217:71:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$158",
                      "typeString": "contract OraclizeAddrResolverI"
                    }
                  },
                  "id": 16,
                  "nodeType": "ExpressionStatement",
                  "src": "217:71:0"
                }
              ]
            },
            "documentation": null,
            "id": 18,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "Oraclizer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "197:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "207:0:0"
            },
            "scope": 40,
            "src": "179:116:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 26,
              "nodeType": "Block",
              "src": "337:100:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "55524c",
                        "id": 22,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "362:5:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                          "typeString": "literal_string \"URL\""
                        },
                        "value": "URL"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6a736f6e28687474703a2f2f6170692e66697865722e696f2f6c61746573743f73796d626f6c733d5553442c474250292e72617465732e474250",
                        "id": 23,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "369:60:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4745f58944c6918c970a977a1d51df7c98057079421fc85c646264240b897640",
                          "typeString": "literal_string \"json(http://api.fixer.io/latest?symbols=USD,GBP).rates.GBP\""
                        },
                        "value": "json(http://api.fixer.io/latest?symbols=USD,GBP).rates.GBP"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                          "typeString": "literal_string \"URL\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4745f58944c6918c970a977a1d51df7c98057079421fc85c646264240b897640",
                          "typeString": "literal_string \"json(http://api.fixer.io/latest?symbols=USD,GBP).rates.GBP\""
                        }
                      ],
                      "id": 21,
                      "name": "oraclize_query",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1049,
                        1091,
                        1137,
                        1181,
                        1224,
                        1269,
                        1318,
                        1365,
                        1412,
                        1461,
                        1514,
                        1565,
                        1602,
                        1642,
                        1685,
                        1725,
                        1770,
                        1818,
                        1869,
                        1917,
                        1970,
                        2026,
                        2085,
                        2141,
                        2202,
                        2266,
                        2333,
                        2397,
                        2466,
                        2538,
                        2613,
                        2685,
                        2732,
                        2781,
                        2834,
                        2885,
                        2922,
                        2962,
                        3005,
                        3045,
                        3090,
                        3138,
                        3189,
                        3237,
                        3290,
                        3346,
                        3405,
                        3461,
                        3522,
                        3586,
                        3653,
                        3717,
                        3786,
                        3858,
                        3933,
                        4005
                      ],
                      "referencedDeclaration": 1049,
                      "src": "347:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (string memory,string memory) returns (bytes32)"
                      }
                    },
                    "id": 24,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "347:83:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 25,
                  "nodeType": "ExpressionStatement",
                  "src": "347:83:0"
                }
              ]
            },
            "documentation": null,
            "id": 27,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "updateGBP",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "319:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "337:0:0"
            },
            "scope": 40,
            "src": "301:136:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 38,
              "nodeType": "Block",
              "src": "499:29:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 36,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 34,
                      "name": "GBP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "509:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 35,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "515:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "509:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 37,
                  "nodeType": "ExpressionStatement",
                  "src": "509:12:0"
                }
              ]
            },
            "documentation": null,
            "id": 39,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29,
                  "name": "myid",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "463:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "463:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "477:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string memory"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "477:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "462:29:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "499:0:0"
            },
            "scope": 40,
            "src": "443:85:0",
            "stateMutability": "nonpayable",
            "superFunction": 959,
            "visibility": "public"
          }
        ],
        "scope": 41,
        "src": "74:456:0"
      }
    ],
    "src": "0:531:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/dmitrisavitski/EthereumProjects/Practice/oraclize-practice/contracts/Oraclizer.sol",
    "exportedSymbols": {
      "Oraclizer": [
        40
      ]
    },
    "id": 41,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/Users/dmitrisavitski/EthereumProjects/Practice/oraclize-practice/ethereum-api/oraclizeAPI_0.5.sol",
        "file": "../ethereum-api/oraclizeAPI_0.5.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 41,
        "sourceUnit": 6034,
        "src": "26:45:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "usingOraclize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6033,
              "src": "96:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingOraclize_$6033",
                "typeString": "contract usingOraclize"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "96:13:0"
          }
        ],
        "contractDependencies": [
          6033
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 40,
        "linearizedBaseContracts": [
          40,
          6033
        ],
        "name": "Oraclizer",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6,
            "name": "OAR",
            "nodeType": "VariableDeclaration",
            "scope": 40,
            "src": "116:33:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$158",
              "typeString": "contract OraclizeAddrResolverI"
            },
            "typeName": {
              "contractScope": null,
              "id": 5,
              "name": "OraclizeAddrResolverI",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 158,
              "src": "116:21:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$158",
                "typeString": "contract OraclizeAddrResolverI"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 8,
            "name": "GBP",
            "nodeType": "VariableDeclaration",
            "scope": 40,
            "src": "155:17:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string storage ref"
            },
            "typeName": {
              "id": 7,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "155:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string storage pointer"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 17,
              "nodeType": "Block",
              "src": "207:88:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 15,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 11,
                      "name": "OAR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "217:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$158",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "307836663438354338424636666334336541323132453933424246386365303436433766316362343735",
                          "id": 13,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "245:42:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x6f485C8BF6fc43eA212E93BBF8ce046C7f1cb475"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 12,
                        "name": "OraclizeAddrResolverI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 158,
                        "src": "223:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OraclizeAddrResolverI_$158_$",
                          "typeString": "type(contract OraclizeAddrResolverI)"
                        }
                      },
                      "id": 14,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "223:65:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$158",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "src": "217:71:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$158",
                      "typeString": "contract OraclizeAddrResolverI"
                    }
                  },
                  "id": 16,
                  "nodeType": "ExpressionStatement",
                  "src": "217:71:0"
                }
              ]
            },
            "documentation": null,
            "id": 18,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "Oraclizer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "197:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "207:0:0"
            },
            "scope": 40,
            "src": "179:116:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 26,
              "nodeType": "Block",
              "src": "337:100:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "55524c",
                        "id": 22,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "362:5:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                          "typeString": "literal_string \"URL\""
                        },
                        "value": "URL"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6a736f6e28687474703a2f2f6170692e66697865722e696f2f6c61746573743f73796d626f6c733d5553442c474250292e72617465732e474250",
                        "id": 23,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "369:60:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4745f58944c6918c970a977a1d51df7c98057079421fc85c646264240b897640",
                          "typeString": "literal_string \"json(http://api.fixer.io/latest?symbols=USD,GBP).rates.GBP\""
                        },
                        "value": "json(http://api.fixer.io/latest?symbols=USD,GBP).rates.GBP"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                          "typeString": "literal_string \"URL\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4745f58944c6918c970a977a1d51df7c98057079421fc85c646264240b897640",
                          "typeString": "literal_string \"json(http://api.fixer.io/latest?symbols=USD,GBP).rates.GBP\""
                        }
                      ],
                      "id": 21,
                      "name": "oraclize_query",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1049,
                        1091,
                        1137,
                        1181,
                        1224,
                        1269,
                        1318,
                        1365,
                        1412,
                        1461,
                        1514,
                        1565,
                        1602,
                        1642,
                        1685,
                        1725,
                        1770,
                        1818,
                        1869,
                        1917,
                        1970,
                        2026,
                        2085,
                        2141,
                        2202,
                        2266,
                        2333,
                        2397,
                        2466,
                        2538,
                        2613,
                        2685,
                        2732,
                        2781,
                        2834,
                        2885,
                        2922,
                        2962,
                        3005,
                        3045,
                        3090,
                        3138,
                        3189,
                        3237,
                        3290,
                        3346,
                        3405,
                        3461,
                        3522,
                        3586,
                        3653,
                        3717,
                        3786,
                        3858,
                        3933,
                        4005
                      ],
                      "referencedDeclaration": 1049,
                      "src": "347:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (string memory,string memory) returns (bytes32)"
                      }
                    },
                    "id": 24,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "347:83:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 25,
                  "nodeType": "ExpressionStatement",
                  "src": "347:83:0"
                }
              ]
            },
            "documentation": null,
            "id": 27,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "updateGBP",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "319:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "337:0:0"
            },
            "scope": 40,
            "src": "301:136:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 38,
              "nodeType": "Block",
              "src": "499:29:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 36,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 34,
                      "name": "GBP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "509:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 35,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "515:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "509:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 37,
                  "nodeType": "ExpressionStatement",
                  "src": "509:12:0"
                }
              ]
            },
            "documentation": null,
            "id": 39,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29,
                  "name": "myid",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "463:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "463:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "477:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string memory"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "477:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "462:29:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "499:0:0"
            },
            "scope": 40,
            "src": "443:85:0",
            "stateMutability": "nonpayable",
            "superFunction": 959,
            "visibility": "public"
          }
        ],
        "scope": 41,
        "src": "74:456:0"
      }
    ],
    "src": "0:531:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.21+commit.dfe3193c.Emscripten.clang"
  },
  "networks": {
    "1523692768700": {
      "events": {},
      "links": {},
      "address": "0x1d79344a4b4d38fd20da6e593c8cd471f1914b16",
      "transactionHash": "0xb468b15bdf32a9ac56f5bce9925fc0e97aa5683c80edf25dff806744f6d0e8fa"
    },
    "1523697270740": {
      "events": {},
      "links": {},
      "address": "0x413bdd0c62068642532ebd8b9f1e1062b4d2b3ed",
      "transactionHash": "0x1d24412021a7b79085184fe549a83ff0d8819523e19ce73acb295ae6dde1e2bb"
    }
  },
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-04-14T09:23:38.451Z"
}